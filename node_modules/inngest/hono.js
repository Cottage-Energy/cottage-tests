"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serve = exports.frameworkName = void 0;
const InngestCommHandler_1 = require("./components/InngestCommHandler");
exports.frameworkName = "hono";
/**
 * Using Hono, serve and register any declared functions with Inngest,
 * making them available to be triggered by events.
 *
 * @example
 * ```ts
 * const handler = serve({
 *   client: inngest,
 *   functions
 * });
 *
 * app.use('/api/inngest',  async (c) => {
 *   return handler(c);
 * });
 * ```
 *
 * @public
 */
const serve = (options) => {
    const handler = new InngestCommHandler_1.InngestCommHandler(Object.assign(Object.assign({ fetch: fetch.bind(globalThis), frameworkName: exports.frameworkName }, options), { handler: (c) => {
            return {
                transformResponse: ({ headers, status, body }) => {
                    return c.body(body, { headers, status });
                },
                url: () => new URL(c.req.url, c.req.header("host")),
                queryString: (key) => c.req.query(key),
                headers: (key) => c.req.header(key),
                method: () => c.req.method,
                body: () => c.req.json(),
            };
        } }));
    return handler.createHandler();
};
exports.serve = serve;
//# sourceMappingURL=hono.js.map