"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchWithAuthFallback = void 0;
/**
 * Send an HTTP request with the given signing key. If the response is a 401 or
 * 403, then try again with the fallback signing key
 */
async function fetchWithAuthFallback({ authToken, authTokenFallback, fetch, options, url, }) {
    let res = await fetch(url, Object.assign(Object.assign({}, options), { headers: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.headers), { Authorization: `Bearer ${authToken}` }) }));
    if ([401, 403].includes(res.status) && authTokenFallback) {
        res = await fetch(url, Object.assign(Object.assign({}, options), { headers: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.headers), { Authorization: `Bearer ${authTokenFallback}` }) }));
    }
    return res;
}
exports.fetchWithAuthFallback = fetchWithAuthFallback;
//# sourceMappingURL=net.js.map