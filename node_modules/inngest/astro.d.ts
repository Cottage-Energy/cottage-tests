import { type APIContext } from "astro";
import { type ServeHandlerOptions } from "./components/InngestCommHandler";
import { type SupportedFrameworkName } from "./types";
export declare const frameworkName: SupportedFrameworkName;
/**
 * In Astro, serve and register any declared functions with Inngest, making
 * them available to be triggered by events.
 *
 * @example
 * ```ts
 * export const { GET, POST, PUT } = serve({
 *   client: inngest,
 *   functions: [fn1, fn2],
 * });
 * ```
 *
 * @public
 */
export declare const serve: (options: ServeHandlerOptions) => ((args_0: APIContext<Record<string, any>, Record<string, string | undefined>>) => Promise<Response>) & {
    GET: (args_0: APIContext<Record<string, any>, Record<string, string | undefined>>) => Promise<Response>;
    POST: (args_0: APIContext<Record<string, any>, Record<string, string | undefined>>) => Promise<Response>;
    PUT: (args_0: APIContext<Record<string, any>, Record<string, string | undefined>>) => Promise<Response>;
};
//# sourceMappingURL=astro.d.ts.map