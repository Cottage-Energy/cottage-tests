"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StepError = void 0;
const zod_1 = require("zod");
/**
 * An error that represents a step exhausting all retries and failing. This is
 * thrown by an Inngest step if it fails.
 *
 * It's synonymous with an `Error`, with the addition of the `stepId` that
 * failed.
 *
 * @public
 */
class StepError extends Error {
    constructor(
    /**
     * The ID of the step that failed.
     */
    stepId, err) {
        var _a;
        const parsedErr = zod_1.z
            .object({
            name: zod_1.z.string(),
            message: zod_1.z.string(),
            stack: zod_1.z.string().optional(),
        })
            .catch({
            name: "Error",
            message: "An unknown error occurred; could not parse error",
        })
            .parse(err);
        super(parsedErr.message);
        this.stepId = stepId;
        this.name = parsedErr.name;
        this.stepId = stepId;
        // Don't show the internal stack trace if we don't have one.
        this.stack = (_a = parsedErr.stack) !== null && _a !== void 0 ? _a : undefined;
    }
}
exports.StepError = StepError;
//# sourceMappingURL=StepError.js.map