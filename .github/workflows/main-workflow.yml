name: Public-Grid-Test-Workflow
run-name: PG ${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }} Test Run Build ${{ github.run_number }} - ${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}

on:
  workflow_call:
    inputs:
      logLevel:
        description: 'Log Level'
        required: true
        type: string
      environment:
        description: 'Environment'
        required: true
        type: string
      scope:
        description: 'Test Scope'
        required: true
        type: string

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log Level'
        required: true
        default: 'INFO'
        type: choice
        options:
        - INFO
        - DEBUG
        - TRACE
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - production
      scope:
        description: 'Test Scope'
        required: true
        default: 'Smoke'
        type: choice
        options:
        - Smoke
        - Regression1
        - Regression2
        - Regression3
        - Regression4
        - Regression5
        - Regression6
        - Regression7

  repository_dispatch:
    types: [deploy]

jobs:
  PG_Test_Run:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Set environment variable
      run: |
        echo "ENV=${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}" >> $GITHUB_ENV

    - name: Set log level
      run: |
        echo "LOG_LEVEL=${{ github.event.inputs.logLevel || github.event.client_payload.logLevel || inputs.logLevel }}" >> $GITHUB_ENV

    - name: Run Playwright tests
      run: |
        if [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Smoke" ]; then
          npx playwright test --grep /@smoke/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression1" ]; then
          npx playwright test --grep /@regression1/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression2" ]; then
          npx playwright test --grep /@regression2/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression3" ]; then
          npx playwright test --grep /@regression3/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression4" ]; then
          npx playwright test --grep /@regression4/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression5" ]; then
          npx playwright test --grep /@regression5/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression6" ]; then
          npx playwright test --grep /@regression6/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression7" ]; then
          npx playwright test --grep /@regression7/ --project=Chromium
        fi

    - name: Test Report Generation
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: PG_${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}_Test_Results_${{ github.run_number }} - ${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}
        path: test-results/*